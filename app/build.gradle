import com.andorid.sylink.mes.plugin.BaseDependencies
import com.andorid.sylink.mes.plugin.Hilt
import com.andorid.sylink.mes.plugin.Versions

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion Versions.compileSdkVersion
    buildToolsVersion Versions.buildToolsVersion

    defaultConfig {
        applicationId "com.example.shuyiapp"
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion
        versionCode 100010001
        versionName "1.0.1"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file(debugKeystorePath)
            storePassword debugKeystorePassword
            keyAlias debugKeyAlias
            keyPassword debugKeyPassword
        }
        release {
            storeFile file(releaseKeystorePath)
            storePassword releaseKeystorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        if (variant.buildType.name != 'release') {
            return
        }
        def oldFile = outputFileName
        def channel = '_' + oldFile.replaceAll('app-serverproduction-', "")
                .replaceAll('-release.apk', '')
        def suffix = '_P'
        def releaseApkName = 'shuyilnk' + '_v' + android.defaultConfig.versionName + '.' +
                android.defaultConfig.versionCode + suffix + channel + "_" + getDate() + '.apk'
        outputFileName = releaseApkName
    }
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

dependencies {

    implementation project(path: ':base')
    implementation project(path: ':network')
    implementation project(path: ':common')
    implementation project(path: ':news')

    implementation BaseDependencies.kotlinStdlib
    implementation BaseDependencies.appCompat
    implementation BaseDependencies.constraintLayout
    implementation BaseDependencies.ktxCore
    implementation BaseDependencies.androidMaterial
    testImplementation BaseDependencies.junit
    androidTestImplementation BaseDependencies.junitExt
    androidTestImplementation BaseDependencies.espressoCore

    implementation BaseDependencies.vectorDrawable
    implementation BaseDependencies.liveData
    implementation BaseDependencies.viewModel
    implementation BaseDependencies.navigationFragment
    implementation BaseDependencies.navigationUI

    implementation Hilt.hiltAndroid
    kapt Hilt.hiltAndroidCompiler

    implementation Hilt.hiltLifecycleViewModel
    kapt Hilt.hiltLifecycleViewModelCompiler
}